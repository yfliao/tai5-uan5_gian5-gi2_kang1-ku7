# 機器翻譯（Machine Translation）
* 輸入
  * 指定的母語，一句語句
* 輸出
  * 母語語句
* 範例
  * 華語翻譯
    *  閩南語，「我要吃飯」→「我欲食飯」
  * 語料正規化
    *  閩南語，「我要呷飯」→「我欲食飯」
* 做法
  * Moses摩西翻譯
* 需要技術
  * 語言模型
  * 斷詞
* 需要語料
  * 華語/母語的對應平行語料
  * 正規前/正規後的對應平行語料
  
本函式庫使用[Moses](http://www.statmt.org/moses/?n=Development.GetStarted)統計式機器翻譯。

## Moses
### 套件準備
#### Ubuntu14.04/Mint17
```bash
sudo apt-get install -y g++ git subversion automake libtool zlib1g-dev libboost-all-dev libbz2-dev liblzma-dev python3-dev libgoogle-perftools-dev libxmlrpc-c++.*-dev # moses, libxmlrpc for mosesserver
sudo apt-get install -y cmake # mgiza
```

#### Mac
感謝[Ru Lu](https://www.facebook.com/ru.lu0)提供做法

##### compile boost
```
./bootstrap.sh --with-libraries=filesystem,system,test,thread,program_options,serialization,iostreams
./bjam stage && sudo ./bjam install
```

##### compile moses
```
brew install xmlrpc-c
./bjam -j8 --prefix=$PWD --libdir=$PWD/lib64 --layout=system link=static toolset=clang  install || echo FAILURE
```
強迫重新編譯時加`-a`


##### compile giza++
```
clu:giza-pp clu$ git diff
diff --git a/GIZA++-v2/Makefile b/GIZA++-v2/Makefile
index 17daae5..8defea3 100644
--- a/GIZA++-v2/Makefile
+++ b/GIZA++-v2/Makefile
@@ -6,7 +6,8 @@ INSTALLDIR ?= /usr/local/bin/

 CFLAGS = $(CFLAGS_GLOBAL) -Wall -Wno-parentheses
 #CFLAGS_OPT = $(CFLAGS) -O3 -DNDEBUG -DWORDINDEX_WITH_4_BYTE -O3 -DNDEBUG -DWORDINDEX_WITH_4_BYTE -ffast-math
-CFLAGS_OPT = $(CFLAGS) -O3 -funroll-loops -DNDEBUG -DWORDINDEX_WITH_4_BYTE -DBINARY_SEARCH_FOR_TTABLE -DWORDINDEX_WITH_4_BYTE
+#CFLAGS_OPT = $(CFLAGS) -O3 -funroll-loops -DNDEBUG -DWORDINDEX_WITH_4_BYTE -DBINARY_SEARCH_FOR_TTABLE -DWORDINDEX_WITH_4_BYTE
+CFLAGS_OPT = $(CFLAGS) -O3 -funroll-loops -DNDEBUG -DWORDINDEX_WITH_4_BYTE -DWORDINDEX_WITH_4_BYTE -stdlib=libstdc++
 CFLAGS_PRF = $(CFLAGS) -O2 -pg -DNDEBUG -DWORDINDEX_WITH_4_BYTE
 CFLAGS_DBG = $(CFLAGS) -g -DDEBUG -DWORDINDEX_WITH_4_BYTE
 CFLAGS_NRM = $(CFLAGS) -DWORDINDEX_WITH_4_BYTE
diff --git a/mkcls-v2/Makefile b/mkcls-v2/Makefile
index 66a86d0..10ec3b6 100644
--- a/mkcls-v2/Makefile
+++ b/mkcls-v2/Makefile
@@ -5,7 +5,7 @@ OBJS = GDAOptimization.o HCOptimization.o Problem.o \
             KategProblemWBC.o KategProblem.o StatVar.o general.o \
             mkcls.o

-CFLAGS = -Wall -W -DNDEBUG -O3 -funroll-loops
+CFLAGS = -Wall -W -DNDEBUG -O3 -funroll-loops -stdlib=libstdc++

 .cpp.o:
        $(CXX) $(CFLAGS) -c $< -o $@
```


### 安裝
編譯需要半小時至一小時以上，剩下的步驟可以邊做
執行`python`，而且輸入
```python3
from 臺灣言語工具.翻譯.摩西工具.安裝摩西翻譯佮相關程式 import 安裝摩西翻譯佮相關程式
安裝摩西翻譯佮相關程式.安裝moses(編譯CPU數=4)
安裝摩西翻譯佮相關程式.安裝gizapp()
```

### 模型訓練

### 模型使用

## 其他翻譯工具
* [seq2seq](https://www.tensorflow.org/tutorials/seq2seq/)
